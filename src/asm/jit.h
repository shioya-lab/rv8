//
//  jit.h
//
//  DANGER - This is machine generated code
//

#ifndef rv_jit_h
#define rv_jit_h

namespace riscv
{
	inst_t emit_lui(ireg5 rd, simm32 imm20);
	inst_t emit_auipc(ireg5 rd, offset32 oimm20);
	inst_t emit_jal(ireg5 rd, offset21 jimm20);
	inst_t emit_jalr(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_beq(ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	inst_t emit_bne(ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	inst_t emit_blt(ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	inst_t emit_bge(ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	inst_t emit_bltu(ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	inst_t emit_bgeu(ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	inst_t emit_lb(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_lh(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_lw(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_lbu(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_lhu(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_sb(ireg5 rs1, ireg5 rs2, offset12 simm12);
	inst_t emit_sh(ireg5 rs1, ireg5 rs2, offset12 simm12);
	inst_t emit_sw(ireg5 rs1, ireg5 rs2, offset12 simm12);
	inst_t emit_addi(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_slti(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_sltiu(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_xori(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_ori(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_andi(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_slli(ireg5 rd, ireg5 rs1, uimm7 shamt7);
	inst_t emit_srli(ireg5 rd, ireg5 rs1, uimm7 shamt7);
	inst_t emit_srai(ireg5 rd, ireg5 rs1, uimm7 shamt7);
	inst_t emit_add(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_sub(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_sll(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_slt(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_sltu(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_xor(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_srl(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_sra(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_or(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_and(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_fence(arg4 pred, arg4 succ);
	inst_t emit_fence_i();
	inst_t emit_lwu(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_ld(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_sd(ireg5 rs1, ireg5 rs2, offset12 simm12);
	inst_t emit_addiw(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_slliw(ireg5 rd, ireg5 rs1, uimm5 shamt5);
	inst_t emit_srliw(ireg5 rd, ireg5 rs1, uimm5 shamt5);
	inst_t emit_sraiw(ireg5 rd, ireg5 rs1, uimm5 shamt5);
	inst_t emit_addw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_subw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_sllw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_srlw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_sraw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_ldu(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_lq(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_sq(ireg5 rs1, ireg5 rs2, offset12 simm12);
	inst_t emit_addid(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_sllid(ireg5 rd, ireg5 rs1, uimm6 shamt6);
	inst_t emit_srlid(ireg5 rd, ireg5 rs1, uimm6 shamt6);
	inst_t emit_sraid(ireg5 rd, ireg5 rs1, uimm6 shamt6);
	inst_t emit_addd(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_subd(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_slld(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_srld(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_srad(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_mul(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_mulh(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_mulhsu(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_mulhu(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_div(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_divu(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_rem(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_remu(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_mulw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_divw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_divuw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_remw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_remuw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_muld(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_divd(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_divud(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_remd(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_remud(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_lr_w(ireg5 rd, ireg5 rs1, arg1 aq, arg1 rl);
	inst_t emit_sc_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoswap_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoadd_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoxor_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoor_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoand_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomin_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomax_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amominu_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomaxu_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_lr_d(ireg5 rd, ireg5 rs1, arg1 aq, arg1 rl);
	inst_t emit_sc_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoswap_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoadd_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoxor_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoor_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoand_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomin_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomax_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amominu_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomaxu_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_lr_q(ireg5 rd, ireg5 rs1, arg1 aq, arg1 rl);
	inst_t emit_sc_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoswap_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoadd_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoxor_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoor_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoand_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomin_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomax_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amominu_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomaxu_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_ecall();
	inst_t emit_ebreak();
	inst_t emit_uret();
	inst_t emit_sret();
	inst_t emit_hret();
	inst_t emit_mret();
	inst_t emit_dret();
	inst_t emit_sfence_vm(ireg5 rs1);
	inst_t emit_sfence_vma(ireg5 rs1, ireg5 rs2);
	inst_t emit_wfi();
	inst_t emit_csrrw(ireg5 rd, ireg5 rs1, uimm12 csr12);
	inst_t emit_csrrs(ireg5 rd, ireg5 rs1, uimm12 csr12);
	inst_t emit_csrrc(ireg5 rd, ireg5 rs1, uimm12 csr12);
	inst_t emit_csrrwi(ireg5 rd, uimm5 zimm, uimm12 csr12);
	inst_t emit_csrrsi(ireg5 rd, uimm5 zimm, uimm12 csr12);
	inst_t emit_csrrci(ireg5 rd, uimm5 zimm, uimm12 csr12);
	inst_t emit_flw(freg5 frd, ireg5 rs1, offset12 oimm12);
	inst_t emit_fsw(ireg5 rs1, freg5 frs2, offset12 simm12);
	inst_t emit_fmadd_s(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fmsub_s(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fnmsub_s(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fnmadd_s(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fadd_s(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fsub_s(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fmul_s(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fdiv_s(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fsgnj_s(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fsgnjn_s(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fsgnjx_s(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fmin_s(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fmax_s(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fsqrt_s(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fle_s(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_flt_s(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_feq_s(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_fcvt_w_s(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_wu_s(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_s_w(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fcvt_s_wu(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fmv_x_s(ireg5 rd, freg5 frs1);
	inst_t emit_fclass_s(ireg5 rd, freg5 frs1);
	inst_t emit_fmv_s_x(freg5 frd, ireg5 rs1);
	inst_t emit_fcvt_l_s(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_lu_s(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_s_l(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fcvt_s_lu(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fld(freg5 frd, ireg5 rs1, offset12 oimm12);
	inst_t emit_fsd(ireg5 rs1, freg5 frs2, offset12 simm12);
	inst_t emit_fmadd_d(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fmsub_d(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fnmsub_d(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fnmadd_d(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fadd_d(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fsub_d(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fmul_d(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fdiv_d(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fsgnj_d(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fsgnjn_d(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fsgnjx_d(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fmin_d(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fmax_d(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fcvt_s_d(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_d_s(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fsqrt_d(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fle_d(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_flt_d(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_feq_d(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_fcvt_w_d(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_wu_d(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_d_w(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fcvt_d_wu(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fclass_d(ireg5 rd, freg5 frs1);
	inst_t emit_fcvt_l_d(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_lu_d(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fmv_x_d(ireg5 rd, freg5 frs1);
	inst_t emit_fcvt_d_l(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fcvt_d_lu(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fmv_d_x(freg5 frd, ireg5 rs1);
	inst_t emit_flq(freg5 frd, ireg5 rs1, offset12 oimm12);
	inst_t emit_fsq(ireg5 rs1, freg5 frs2, offset12 simm12);
	inst_t emit_fmadd_q(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fmsub_q(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fnmsub_q(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fnmadd_q(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fadd_q(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fsub_q(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fmul_q(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fdiv_q(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fsgnj_q(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fsgnjn_q(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fsgnjx_q(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fmin_q(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fmax_q(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fcvt_s_q(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_q_s(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_d_q(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_q_d(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fsqrt_q(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fle_q(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_flt_q(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_feq_q(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_fcvt_w_q(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_wu_q(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_q_w(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fcvt_q_wu(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fclass_q(ireg5 rd, freg5 frs1);
	inst_t emit_fcvt_l_q(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_lu_q(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_q_l(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fcvt_q_lu(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fmv_x_q(ireg5 rd, freg5 frs1);
	inst_t emit_fmv_q_x(freg5 frd, ireg5 rs1);
	inst_t emit_vsetvli(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_vsetivli(ireg5 rd, simm12 imm12, offset12 oimm12);
	inst_t emit_vsetvl(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vle8_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vse8_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vle16_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vse16_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vle32_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vse32_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vle64_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vse64_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vle8ff_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vle16ff_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vle32ff_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vle64ff_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vl1re8_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vl1re16_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vl1re32_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vl1re64_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vl2re8_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vl2re16_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vl2re32_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vl2re64_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vl4re8_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vl4re16_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vl4re32_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vl4re64_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vl8re8_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vl8re16_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vl8re32_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vl8re64_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vs1re8_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vs1re16_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vs1re32_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vs1re64_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vs2re8_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vs2re16_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vs2re32_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vs2re64_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vs4re8_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vs4re16_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vs4re32_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vs4re64_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vs8re8_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vs8re16_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vs8re32_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vs8re64_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlse8_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vsse8_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlse16_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vsse16_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlse32_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vsse32_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlse64_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vsse64_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vluxei8_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxei8_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxei16_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxei16_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxei32_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxei32_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxei64_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxei64_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxei8_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxei8_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxei16_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxei16_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxei32_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxei32_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxei64_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxei64_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vlseg2e8_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg2e8_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg2e16_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg2e16_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg2e32_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg2e32_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg2e64_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg2e64_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlsseg2e8_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg2e8_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg2e16_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg2e16_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg2e32_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg2e32_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg2e64_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg2e64_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vluxseg2ei8_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg2ei8_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg2ei16_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg2ei16_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg2ei32_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg2ei32_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg2ei64_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg2ei64_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg2ei8_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg2ei8_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg2ei16_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg2ei16_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg2ei32_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg2ei32_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg2ei64_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg2ei64_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vlseg3e8_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg3e8_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg3e16_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg3e16_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg3e32_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg3e32_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg3e64_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg3e64_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlsseg3e8_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg3e8_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg3e16_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg3e16_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg3e32_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg3e32_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg3e64_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg3e64_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vluxseg3ei8_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg3ei8_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg3ei16_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg3ei16_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg3ei32_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg3ei32_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg3ei64_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg3ei64_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg3ei8_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg3ei8_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg3ei16_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg3ei16_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg3ei32_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg3ei32_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg3ei64_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg3ei64_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vlseg4e8_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg4e8_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg4e16_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg4e16_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg4e32_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg4e32_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg4e64_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg4e64_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlsseg4e8_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg4e8_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg4e16_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg4e16_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg4e32_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg4e32_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg4e64_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg4e64_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vluxseg4ei8_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg4ei8_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg4ei16_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg4ei16_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg4ei32_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg4ei32_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg4ei64_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg4ei64_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg4ei8_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg4ei8_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg4ei16_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg4ei16_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg4ei32_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg4ei32_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg4ei64_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg4ei64_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vlseg5e8_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg5e8_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg5e16_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg5e16_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg5e32_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg5e32_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg5e64_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg5e64_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlsseg5e8_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg5e8_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg5e16_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg5e16_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg5e32_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg5e32_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg5e64_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg5e64_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vluxseg5ei8_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg5ei8_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg5ei16_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg5ei16_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg5ei32_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg5ei32_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg5ei64_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg5ei64_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg5ei8_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg5ei8_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg5ei16_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg5ei16_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg5ei32_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg5ei32_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg5ei64_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg5ei64_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vlseg6e8_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg6e8_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg6e16_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg6e16_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg6e32_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg6e32_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg6e64_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg6e64_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlsseg6e8_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg6e8_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg6e16_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg6e16_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg6e32_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg6e32_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg6e64_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg6e64_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vluxseg6ei8_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg6ei8_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg6ei16_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg6ei16_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg6ei32_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg6ei32_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg6ei64_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg6ei64_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg6ei8_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg6ei8_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg6ei16_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg6ei16_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg6ei32_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg6ei32_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg6ei64_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg6ei64_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vlseg7e8_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg7e8_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg7e16_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg7e16_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg7e32_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg7e32_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg7e64_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg7e64_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlsseg7e8_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg7e8_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg7e16_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg7e16_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg7e32_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg7e32_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg7e64_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg7e64_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vluxseg7ei8_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg7ei8_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg7ei16_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg7ei16_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg7ei32_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg7ei32_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg7ei64_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg7ei64_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg7ei8_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg7ei8_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg7ei16_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg7ei16_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg7ei32_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg7ei32_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg7ei64_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg7ei64_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vlseg8e8_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg8e8_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg8e16_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg8e16_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg8e32_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg8e32_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlseg8e64_v(vreg5 vd, ireg5 rs1);
	inst_t emit_vsseg8e64_v(vreg5 vs3, ireg5 rs1);
	inst_t emit_vlsseg8e8_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg8e8_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg8e16_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg8e16_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg8e32_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg8e32_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vlsseg8e64_v(vreg5 vd, ireg5 rs1, ireg5 rs2);
	inst_t emit_vssseg8e64_v(vreg5 vs3, ireg5 rs1, ireg5 rs2);
	inst_t emit_vluxseg8ei8_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg8ei8_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg8ei16_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg8ei16_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg8ei32_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg8ei32_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vluxseg8ei64_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsuxseg8ei64_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg8ei8_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg8ei8_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg8ei16_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg8ei16_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg8ei32_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg8ei32_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vloxseg8ei64_v(vreg5 vd, ireg5 rs1, vreg5 vs2);
	inst_t emit_vsoxseg8ei64_v(vreg5 vs3, ireg5 rs1, vreg5 vs2);
	inst_t emit_vadd_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vsub_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vminu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmin_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmaxu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmax_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vand_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vor_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vxor_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vrgather_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vadc_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmadc_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vsbc_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmsbc_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmerge_vvm(vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	inst_t emit_vmseq_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmsne_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmsltu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmslt_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmsleu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmsle_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vsaddu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vsadd_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vssubu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vssub_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vsll_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vsmul_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vsrl_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vsra_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vssrl_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vssra_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vnsrl_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vnsra_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vnclipu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vnclip_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwredsumu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwredsum_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vdotu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vdot_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vqmaccu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vqmacc_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vqmaccus_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vqmaccsu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vadd_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vsub_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vrsub_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vminu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmin_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmaxu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmax_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vand_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vor_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vxor_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vrgather_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vslideup_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vslidedown_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vadc_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmadc_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vsbc_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmsbc_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmerge_vxm(vreg5 vd, vreg5 vs2, ireg5 rs1, vreg5 vs3);
	inst_t emit_vmseq_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmsne_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmsltu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmslt_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmsleu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmsle_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmsgtu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmsgt_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vsaddu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vsadd_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vssubu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vssub_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vsll_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vsmul_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vsrl_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vsra_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vssrl_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vssra_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vnsrl_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vnsra_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vnclipu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vnclip_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwredsumu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwredsum_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vdotu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vdot_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vqmaccu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vqmacc_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vqmaccus_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vqmaccsu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vadd_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vrsub_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vand_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vor_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vxor_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vrgather_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vslideup_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vslidedown_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vadc_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vmadc_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vmv_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vmseq_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vmsne_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vmsleu_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vmsle_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vmsgtu_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vmsgt_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vmv1r(vreg5 vd, vreg5 vs2);
	inst_t emit_vmv2r(vreg5 vd, vreg5 vs2);
	inst_t emit_vmv4r(vreg5 vd, vreg5 vs2);
	inst_t emit_vmv8r(vreg5 vd, vreg5 vs2);
	inst_t emit_vsaddu_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vsadd_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vsll_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vsrl_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vsra_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vssrl_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vssra_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vnsrl_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vnsra_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vnclipu_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vnclip_vi(vreg5 vd, vreg5 vs2, simm1 simm5);
	inst_t emit_vredsum_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vredand_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vredor_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vredxor_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vredminu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vredmin_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vredmaxu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vredmax_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vaaddu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vaadd_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vasubu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vasub_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmv_x_s(vreg5 vd, vreg5 vs2);
	inst_t emit_vpopc_m(vreg5 vd, vreg5 vs2);
	inst_t emit_vfirst_m(vreg5 vd, vreg5 vs2);
	inst_t emit_vmv_s_x(vreg5 vd, vreg5 vs2);
	inst_t emit_vzext_vf8(vreg5 vd, vreg5 vs2);
	inst_t emit_vsext_vf8(vreg5 vd, vreg5 vs2);
	inst_t emit_vzext_vf4(vreg5 vd, vreg5 vs2);
	inst_t emit_vsext_vf4(vreg5 vd, vreg5 vs2);
	inst_t emit_vzext_vf2(vreg5 vd, vreg5 vs2);
	inst_t emit_vsext_vf2(vreg5 vd, vreg5 vs2);
	inst_t emit_vmsbf_m(vreg5 vd, vreg5 vs2);
	inst_t emit_vmsof_m(vreg5 vd, vreg5 vs2);
	inst_t emit_vmsif_m(vreg5 vd, vreg5 vs2);
	inst_t emit_viota_m(vreg5 vd, vreg5 vs2);
	inst_t emit_vid_v(vreg5 vd, vreg5 vs2);
	inst_t emit_vcompress_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmandnot_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmand_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmor_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmxor_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmornot_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmnand_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmnor_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmxnor_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vdivu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vdiv_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vremu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vrem_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmulhu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmul_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmulhsu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmulh_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmadd_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vnmsub_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vmacc_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vnmsac_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwaddu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwadd_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwsubu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwsub_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwaddu_w_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwadd_w_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwsubu_w_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwsub_w_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwmulu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwmulsu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwmul_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwmaccu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwmacc_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwmaccus_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vwmaccsu_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vaaddu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vaadd_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vasubu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vasub_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vslide1up_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vslide1down_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vdivu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vdiv_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vremu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vrem_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmulhu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmul_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmulhsu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmulh_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmadd_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vnmsub_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vmacc_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vnmsac_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwaddu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwadd_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwsubu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwsub_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwaddu_w_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwadd_w_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwsubu_w_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwsub_w_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwmulu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwmulsu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwmul_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwmaccu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwmacc_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwmaccus_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vwmaccsu_vx(vreg5 vd, vreg5 vs2, ireg5 rs1);
	inst_t emit_vfadd_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfredsum_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfsub_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfredosum_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfmin_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfredmin_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfmax_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfredmax_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfsgnj_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfsgnjn_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfsgnjx_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfslide1up_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfslide1down_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vmfeq_vx(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vmfle_vx(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vmflt_vx(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vmfne_vx(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfdiv_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfcvt_xu_f_v(vreg5 vd, vreg5 vs2);
	inst_t emit_vfcvt_x_f_v(vreg5 vd, vreg5 vs2);
	inst_t emit_vfcvt_f_xu_v(vreg5 vd, vreg5 vs2);
	inst_t emit_vfcvt_f_x_v(vreg5 vd, vreg5 vs2);
	inst_t emit_vfcvt_rtz_xu_f_v(vreg5 vd, vreg5 vs2);
	inst_t emit_vfcvt_rtz_x_f_v(vreg5 vd, vreg5 vs2);
	inst_t emit_vfwcvt_xu_f_v(vreg5 vd, vreg5 vs2);
	inst_t emit_vfwcvt_x_f_v(vreg5 vd, vreg5 vs2);
	inst_t emit_vfwcvt_f_xu_v(vreg5 vd, vreg5 vs2);
	inst_t emit_vfwcvt_f_x_v(vreg5 vd, vreg5 vs2);
	inst_t emit_vfwcvt_f_f_v(vreg5 vd, vreg5 vs2);
	inst_t emit_vfwcvt_rtz_xu_f_v(vreg5 vd, vreg5 vs2);
	inst_t emit_vfwcvt_rtz_x_f_v(vreg5 vd, vreg5 vs2);
	inst_t emit_vfncvt_xu_f_w(vreg5 vd, vreg5 vs2);
	inst_t emit_vfncvt_x_f_w(vreg5 vd, vreg5 vs2);
	inst_t emit_vfncvt_f_xu_w(vreg5 vd, vreg5 vs2);
	inst_t emit_vfncvt_f_x_w(vreg5 vd, vreg5 vs2);
	inst_t emit_vfncvt_f_f_w(vreg5 vd, vreg5 vs2);
	inst_t emit_vfncvt_rod_f_f_w(vreg5 vd, vreg5 vs2);
	inst_t emit_vfncvt_rtz_xu_f_w(vreg5 vd, vreg5 vs2);
	inst_t emit_vfncvt_rtz_x_f_w(vreg5 vd, vreg5 vs2);
	inst_t emit_vfmul_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfmadd_vv(vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	inst_t emit_vfnmadd_vv(vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	inst_t emit_vfmsub_vv(vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	inst_t emit_vfnmsub_vv(vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	inst_t emit_vfmacc_vv(vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	inst_t emit_vfnmacc_vv(vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	inst_t emit_vfmsac_vv(vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	inst_t emit_vfnmsac_vv(vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	inst_t emit_vfwadd_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfwredsum_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfwsub_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfwredosum_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfwadd_wv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfwsub_wv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfwmul_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfdot_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfwmacc_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfwnmacc_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfwmsac_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfwnmsac_vv(vreg5 vd, vreg5 vs2, vreg5 vs1);
	inst_t emit_vfadd_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfredsum_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfsub_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfredosum_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfmin_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfredmin_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfmax_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfredmax_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfsgnj_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfsgnjn_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfsgnjx_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfmv_s_f(vreg5 vd, ireg5 rs1);
	inst_t emit_vfmv_f_s(freg5 frd, vreg5 vs2);
	inst_t emit_vfmv_v_f(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vmfeq_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vmfle_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vmflt_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vmfne_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vmfgt_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vmfge_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfdiv_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfrdiv_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfmul_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfrsub_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfmadd_vf(vreg5 vd, vreg5 vs2, freg5 frs1, vreg5 vs3);
	inst_t emit_vfnmadd_vf(vreg5 vd, vreg5 vs2, freg5 frs1, vreg5 vs3);
	inst_t emit_vfmsub_vf(vreg5 vd, vreg5 vs2, freg5 frs1, vreg5 vs3);
	inst_t emit_vfnmsub_vf(vreg5 vd, vreg5 vs2, freg5 frs1, vreg5 vs3);
	inst_t emit_vfmacc_vf(vreg5 vd, vreg5 vs2, freg5 frs1, vreg5 vs3);
	inst_t emit_vfnmacc_vf(vreg5 vd, vreg5 vs2, freg5 frs1, vreg5 vs3);
	inst_t emit_vfmsac_vf(vreg5 vd, vreg5 vs2, freg5 frs1, vreg5 vs3);
	inst_t emit_vfnmsac_vf(vreg5 vd, vreg5 vs2, freg5 frs1, vreg5 vs3);
	inst_t emit_vfwadd_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfwredsum_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfwsub_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfwredosum_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfwadd_wf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfwsub_wf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfwmul_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfdot_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfwmacc_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfwnmacc_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfwmsac_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfwnmsac_vf(vreg5 vd, vreg5 vs2, freg5 frs1);
	inst_t emit_vfsqrt_v(vreg5 vd, vreg5 vs2, freg5 frs1);

	bool asm_lui(assembler &as, ireg5 rd, simm32 imm20);
	bool asm_auipc(assembler &as, ireg5 rd, offset32 oimm20);
	bool asm_jal(assembler &as, ireg5 rd, offset21 jimm20);
	bool asm_jalr(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_beq(assembler &as, ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	bool asm_bne(assembler &as, ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	bool asm_blt(assembler &as, ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	bool asm_bge(assembler &as, ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	bool asm_bltu(assembler &as, ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	bool asm_bgeu(assembler &as, ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	bool asm_lb(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_lh(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_lw(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_lbu(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_lhu(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_sb(assembler &as, ireg5 rs1, ireg5 rs2, offset12 simm12);
	bool asm_sh(assembler &as, ireg5 rs1, ireg5 rs2, offset12 simm12);
	bool asm_sw(assembler &as, ireg5 rs1, ireg5 rs2, offset12 simm12);
	bool asm_addi(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_slti(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_sltiu(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_xori(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_ori(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_andi(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_slli(assembler &as, ireg5 rd, ireg5 rs1, uimm7 shamt7);
	bool asm_srli(assembler &as, ireg5 rd, ireg5 rs1, uimm7 shamt7);
	bool asm_srai(assembler &as, ireg5 rd, ireg5 rs1, uimm7 shamt7);
	bool asm_add(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_sub(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_sll(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_slt(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_sltu(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_xor(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_srl(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_sra(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_or(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_and(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_fence(assembler &as, arg4 pred, arg4 succ);
	bool asm_fence_i(assembler &as);
	bool asm_lwu(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_ld(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_sd(assembler &as, ireg5 rs1, ireg5 rs2, offset12 simm12);
	bool asm_addiw(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_slliw(assembler &as, ireg5 rd, ireg5 rs1, uimm5 shamt5);
	bool asm_srliw(assembler &as, ireg5 rd, ireg5 rs1, uimm5 shamt5);
	bool asm_sraiw(assembler &as, ireg5 rd, ireg5 rs1, uimm5 shamt5);
	bool asm_addw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_subw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_sllw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_srlw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_sraw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_ldu(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_lq(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_sq(assembler &as, ireg5 rs1, ireg5 rs2, offset12 simm12);
	bool asm_addid(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_sllid(assembler &as, ireg5 rd, ireg5 rs1, uimm6 shamt6);
	bool asm_srlid(assembler &as, ireg5 rd, ireg5 rs1, uimm6 shamt6);
	bool asm_sraid(assembler &as, ireg5 rd, ireg5 rs1, uimm6 shamt6);
	bool asm_addd(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_subd(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_slld(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_srld(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_srad(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_mul(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_mulh(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_mulhsu(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_mulhu(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_div(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_divu(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_rem(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_remu(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_mulw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_divw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_divuw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_remw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_remuw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_muld(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_divd(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_divud(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_remd(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_remud(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_lr_w(assembler &as, ireg5 rd, ireg5 rs1, arg1 aq, arg1 rl);
	bool asm_sc_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoswap_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoadd_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoxor_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoor_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoand_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomin_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomax_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amominu_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomaxu_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_lr_d(assembler &as, ireg5 rd, ireg5 rs1, arg1 aq, arg1 rl);
	bool asm_sc_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoswap_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoadd_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoxor_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoor_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoand_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomin_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomax_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amominu_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomaxu_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_lr_q(assembler &as, ireg5 rd, ireg5 rs1, arg1 aq, arg1 rl);
	bool asm_sc_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoswap_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoadd_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoxor_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoor_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoand_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomin_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomax_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amominu_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomaxu_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_ecall(assembler &as);
	bool asm_ebreak(assembler &as);
	bool asm_uret(assembler &as);
	bool asm_sret(assembler &as);
	bool asm_hret(assembler &as);
	bool asm_mret(assembler &as);
	bool asm_dret(assembler &as);
	bool asm_sfence_vm(assembler &as, ireg5 rs1);
	bool asm_sfence_vma(assembler &as, ireg5 rs1, ireg5 rs2);
	bool asm_wfi(assembler &as);
	bool asm_csrrw(assembler &as, ireg5 rd, ireg5 rs1, uimm12 csr12);
	bool asm_csrrs(assembler &as, ireg5 rd, ireg5 rs1, uimm12 csr12);
	bool asm_csrrc(assembler &as, ireg5 rd, ireg5 rs1, uimm12 csr12);
	bool asm_csrrwi(assembler &as, ireg5 rd, uimm5 zimm, uimm12 csr12);
	bool asm_csrrsi(assembler &as, ireg5 rd, uimm5 zimm, uimm12 csr12);
	bool asm_csrrci(assembler &as, ireg5 rd, uimm5 zimm, uimm12 csr12);
	bool asm_flw(assembler &as, freg5 frd, ireg5 rs1, offset12 oimm12);
	bool asm_fsw(assembler &as, ireg5 rs1, freg5 frs2, offset12 simm12);
	bool asm_fmadd_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fmsub_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fnmsub_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fnmadd_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fadd_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fsub_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fmul_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fdiv_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fsgnj_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fsgnjn_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fsgnjx_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fmin_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fmax_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fsqrt_s(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fle_s(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_flt_s(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_feq_s(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_fcvt_w_s(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_wu_s(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_s_w(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fcvt_s_wu(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fmv_x_s(assembler &as, ireg5 rd, freg5 frs1);
	bool asm_fclass_s(assembler &as, ireg5 rd, freg5 frs1);
	bool asm_fmv_s_x(assembler &as, freg5 frd, ireg5 rs1);
	bool asm_fcvt_l_s(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_lu_s(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_s_l(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fcvt_s_lu(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fld(assembler &as, freg5 frd, ireg5 rs1, offset12 oimm12);
	bool asm_fsd(assembler &as, ireg5 rs1, freg5 frs2, offset12 simm12);
	bool asm_fmadd_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fmsub_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fnmsub_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fnmadd_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fadd_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fsub_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fmul_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fdiv_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fsgnj_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fsgnjn_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fsgnjx_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fmin_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fmax_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fcvt_s_d(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fcvt_d_s(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fsqrt_d(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fle_d(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_flt_d(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_feq_d(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_fcvt_w_d(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_wu_d(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_d_w(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fcvt_d_wu(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fclass_d(assembler &as, ireg5 rd, freg5 frs1);
	bool asm_fcvt_l_d(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_lu_d(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fmv_x_d(assembler &as, ireg5 rd, freg5 frs1);
	bool asm_fcvt_d_l(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fcvt_d_lu(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fmv_d_x(assembler &as, freg5 frd, ireg5 rs1);
	bool asm_flq(assembler &as, freg5 frd, ireg5 rs1, offset12 oimm12);
	bool asm_fsq(assembler &as, ireg5 rs1, freg5 frs2, offset12 simm12);
	bool asm_fmadd_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fmsub_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fnmsub_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fnmadd_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fadd_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fsub_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fmul_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fdiv_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fsgnj_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fsgnjn_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fsgnjx_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fmin_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fmax_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fcvt_s_q(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fcvt_q_s(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fcvt_d_q(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fcvt_q_d(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fsqrt_q(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fle_q(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_flt_q(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_feq_q(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_fcvt_w_q(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_wu_q(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_q_w(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fcvt_q_wu(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fclass_q(assembler &as, ireg5 rd, freg5 frs1);
	bool asm_fcvt_l_q(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_lu_q(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_q_l(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fcvt_q_lu(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fmv_x_q(assembler &as, ireg5 rd, freg5 frs1);
	bool asm_fmv_q_x(assembler &as, freg5 frd, ireg5 rs1);
	bool asm_vsetvli(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_vsetivli(assembler &as, ireg5 rd, simm12 imm12, offset12 oimm12);
	bool asm_vsetvl(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_vle8_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vse8_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vle16_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vse16_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vle32_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vse32_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vle64_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vse64_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vle8ff_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vle16ff_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vle32ff_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vle64ff_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vl1re8_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vl1re16_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vl1re32_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vl1re64_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vl2re8_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vl2re16_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vl2re32_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vl2re64_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vl4re8_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vl4re16_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vl4re32_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vl4re64_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vl8re8_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vl8re16_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vl8re32_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vl8re64_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vs1re8_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vs1re16_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vs1re32_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vs1re64_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vs2re8_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vs2re16_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vs2re32_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vs2re64_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vs4re8_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vs4re16_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vs4re32_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vs4re64_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vs8re8_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vs8re16_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vs8re32_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vs8re64_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlse8_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vsse8_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlse16_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vsse16_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlse32_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vsse32_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlse64_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vsse64_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vluxei8_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxei8_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxei16_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxei16_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxei32_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxei32_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxei64_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxei64_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxei8_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxei8_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxei16_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxei16_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxei32_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxei32_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxei64_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxei64_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vlseg2e8_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg2e8_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg2e16_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg2e16_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg2e32_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg2e32_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg2e64_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg2e64_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlsseg2e8_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg2e8_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg2e16_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg2e16_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg2e32_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg2e32_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg2e64_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg2e64_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vluxseg2ei8_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg2ei8_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg2ei16_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg2ei16_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg2ei32_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg2ei32_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg2ei64_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg2ei64_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg2ei8_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg2ei8_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg2ei16_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg2ei16_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg2ei32_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg2ei32_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg2ei64_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg2ei64_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vlseg3e8_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg3e8_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg3e16_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg3e16_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg3e32_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg3e32_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg3e64_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg3e64_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlsseg3e8_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg3e8_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg3e16_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg3e16_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg3e32_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg3e32_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg3e64_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg3e64_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vluxseg3ei8_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg3ei8_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg3ei16_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg3ei16_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg3ei32_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg3ei32_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg3ei64_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg3ei64_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg3ei8_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg3ei8_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg3ei16_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg3ei16_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg3ei32_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg3ei32_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg3ei64_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg3ei64_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vlseg4e8_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg4e8_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg4e16_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg4e16_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg4e32_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg4e32_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg4e64_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg4e64_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlsseg4e8_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg4e8_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg4e16_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg4e16_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg4e32_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg4e32_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg4e64_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg4e64_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vluxseg4ei8_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg4ei8_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg4ei16_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg4ei16_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg4ei32_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg4ei32_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg4ei64_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg4ei64_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg4ei8_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg4ei8_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg4ei16_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg4ei16_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg4ei32_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg4ei32_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg4ei64_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg4ei64_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vlseg5e8_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg5e8_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg5e16_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg5e16_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg5e32_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg5e32_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg5e64_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg5e64_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlsseg5e8_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg5e8_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg5e16_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg5e16_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg5e32_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg5e32_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg5e64_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg5e64_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vluxseg5ei8_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg5ei8_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg5ei16_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg5ei16_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg5ei32_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg5ei32_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg5ei64_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg5ei64_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg5ei8_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg5ei8_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg5ei16_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg5ei16_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg5ei32_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg5ei32_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg5ei64_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg5ei64_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vlseg6e8_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg6e8_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg6e16_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg6e16_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg6e32_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg6e32_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg6e64_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg6e64_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlsseg6e8_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg6e8_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg6e16_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg6e16_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg6e32_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg6e32_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg6e64_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg6e64_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vluxseg6ei8_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg6ei8_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg6ei16_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg6ei16_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg6ei32_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg6ei32_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg6ei64_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg6ei64_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg6ei8_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg6ei8_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg6ei16_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg6ei16_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg6ei32_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg6ei32_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg6ei64_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg6ei64_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vlseg7e8_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg7e8_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg7e16_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg7e16_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg7e32_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg7e32_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg7e64_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg7e64_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlsseg7e8_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg7e8_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg7e16_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg7e16_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg7e32_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg7e32_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg7e64_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg7e64_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vluxseg7ei8_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg7ei8_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg7ei16_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg7ei16_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg7ei32_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg7ei32_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg7ei64_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg7ei64_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg7ei8_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg7ei8_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg7ei16_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg7ei16_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg7ei32_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg7ei32_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg7ei64_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg7ei64_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vlseg8e8_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg8e8_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg8e16_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg8e16_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg8e32_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg8e32_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlseg8e64_v(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vsseg8e64_v(assembler &as, vreg5 vs3, ireg5 rs1);
	bool asm_vlsseg8e8_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg8e8_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg8e16_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg8e16_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg8e32_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg8e32_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vlsseg8e64_v(assembler &as, vreg5 vd, ireg5 rs1, ireg5 rs2);
	bool asm_vssseg8e64_v(assembler &as, vreg5 vs3, ireg5 rs1, ireg5 rs2);
	bool asm_vluxseg8ei8_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg8ei8_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg8ei16_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg8ei16_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg8ei32_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg8ei32_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vluxseg8ei64_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsuxseg8ei64_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg8ei8_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg8ei8_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg8ei16_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg8ei16_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg8ei32_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg8ei32_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vloxseg8ei64_v(assembler &as, vreg5 vd, ireg5 rs1, vreg5 vs2);
	bool asm_vsoxseg8ei64_v(assembler &as, vreg5 vs3, ireg5 rs1, vreg5 vs2);
	bool asm_vadd_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vsub_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vminu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmin_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmaxu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmax_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vand_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vor_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vxor_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vrgather_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vadc_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmadc_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vsbc_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmsbc_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmerge_vvm(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	bool asm_vmseq_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmsne_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmsltu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmslt_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmsleu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmsle_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vsaddu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vsadd_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vssubu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vssub_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vsll_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vsmul_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vsrl_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vsra_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vssrl_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vssra_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vnsrl_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vnsra_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vnclipu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vnclip_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwredsumu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwredsum_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vdotu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vdot_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vqmaccu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vqmacc_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vqmaccus_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vqmaccsu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vadd_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vsub_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vrsub_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vminu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmin_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmaxu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmax_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vand_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vor_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vxor_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vrgather_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vslideup_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vslidedown_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vadc_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmadc_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vsbc_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmsbc_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmerge_vxm(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1, vreg5 vs3);
	bool asm_vmseq_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmsne_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmsltu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmslt_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmsleu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmsle_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmsgtu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmsgt_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vsaddu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vsadd_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vssubu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vssub_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vsll_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vsmul_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vsrl_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vsra_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vssrl_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vssra_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vnsrl_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vnsra_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vnclipu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vnclip_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwredsumu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwredsum_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vdotu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vdot_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vqmaccu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vqmacc_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vqmaccus_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vqmaccsu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vadd_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vrsub_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vand_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vor_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vxor_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vrgather_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vslideup_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vslidedown_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vadc_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vmadc_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vmv_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vmseq_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vmsne_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vmsleu_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vmsle_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vmsgtu_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vmsgt_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vmv1r(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vmv2r(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vmv4r(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vmv8r(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vsaddu_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vsadd_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vsll_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vsrl_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vsra_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vssrl_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vssra_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vnsrl_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vnsra_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vnclipu_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vnclip_vi(assembler &as, vreg5 vd, vreg5 vs2, simm1 simm5);
	bool asm_vredsum_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vredand_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vredor_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vredxor_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vredminu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vredmin_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vredmaxu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vredmax_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vaaddu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vaadd_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vasubu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vasub_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmv_x_s(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vpopc_m(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfirst_m(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vmv_s_x(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vzext_vf8(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vsext_vf8(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vzext_vf4(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vsext_vf4(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vzext_vf2(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vsext_vf2(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vmsbf_m(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vmsof_m(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vmsif_m(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_viota_m(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vid_v(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vcompress_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmandnot_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmand_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmor_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmxor_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmornot_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmnand_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmnor_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmxnor_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vdivu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vdiv_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vremu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vrem_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmulhu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmul_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmulhsu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmulh_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmadd_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vnmsub_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vmacc_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vnmsac_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwaddu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwadd_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwsubu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwsub_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwaddu_w_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwadd_w_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwsubu_w_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwsub_w_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwmulu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwmulsu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwmul_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwmaccu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwmacc_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwmaccus_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vwmaccsu_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vaaddu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vaadd_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vasubu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vasub_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vslide1up_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vslide1down_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vdivu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vdiv_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vremu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vrem_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmulhu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmul_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmulhsu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmulh_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmadd_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vnmsub_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vmacc_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vnmsac_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwaddu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwadd_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwsubu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwsub_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwaddu_w_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwadd_w_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwsubu_w_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwsub_w_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwmulu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwmulsu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwmul_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwmaccu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwmacc_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwmaccus_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vwmaccsu_vx(assembler &as, vreg5 vd, vreg5 vs2, ireg5 rs1);
	bool asm_vfadd_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfredsum_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfsub_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfredosum_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfmin_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfredmin_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfmax_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfredmax_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfsgnj_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfsgnjn_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfsgnjx_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfslide1up_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfslide1down_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vmfeq_vx(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vmfle_vx(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vmflt_vx(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vmfne_vx(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfdiv_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfcvt_xu_f_v(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfcvt_x_f_v(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfcvt_f_xu_v(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfcvt_f_x_v(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfcvt_rtz_xu_f_v(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfcvt_rtz_x_f_v(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfwcvt_xu_f_v(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfwcvt_x_f_v(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfwcvt_f_xu_v(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfwcvt_f_x_v(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfwcvt_f_f_v(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfwcvt_rtz_xu_f_v(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfwcvt_rtz_x_f_v(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfncvt_xu_f_w(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfncvt_x_f_w(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfncvt_f_xu_w(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfncvt_f_x_w(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfncvt_f_f_w(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfncvt_rod_f_f_w(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfncvt_rtz_xu_f_w(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfncvt_rtz_x_f_w(assembler &as, vreg5 vd, vreg5 vs2);
	bool asm_vfmul_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfmadd_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	bool asm_vfnmadd_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	bool asm_vfmsub_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	bool asm_vfnmsub_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	bool asm_vfmacc_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	bool asm_vfnmacc_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	bool asm_vfmsac_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	bool asm_vfnmsac_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1, vreg5 vs3);
	bool asm_vfwadd_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfwredsum_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfwsub_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfwredosum_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfwadd_wv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfwsub_wv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfwmul_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfdot_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfwmacc_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfwnmacc_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfwmsac_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfwnmsac_vv(assembler &as, vreg5 vd, vreg5 vs2, vreg5 vs1);
	bool asm_vfadd_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfredsum_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfsub_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfredosum_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfmin_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfredmin_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfmax_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfredmax_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfsgnj_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfsgnjn_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfsgnjx_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfmv_s_f(assembler &as, vreg5 vd, ireg5 rs1);
	bool asm_vfmv_f_s(assembler &as, freg5 frd, vreg5 vs2);
	bool asm_vfmv_v_f(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vmfeq_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vmfle_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vmflt_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vmfne_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vmfgt_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vmfge_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfdiv_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfrdiv_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfmul_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfrsub_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfmadd_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1, vreg5 vs3);
	bool asm_vfnmadd_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1, vreg5 vs3);
	bool asm_vfmsub_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1, vreg5 vs3);
	bool asm_vfnmsub_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1, vreg5 vs3);
	bool asm_vfmacc_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1, vreg5 vs3);
	bool asm_vfnmacc_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1, vreg5 vs3);
	bool asm_vfmsac_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1, vreg5 vs3);
	bool asm_vfnmsac_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1, vreg5 vs3);
	bool asm_vfwadd_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfwredsum_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfwsub_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfwredosum_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfwadd_wf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfwsub_wf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfwmul_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfdot_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfwmacc_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfwnmacc_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfwmsac_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfwnmsac_vf(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
	bool asm_vfsqrt_v(assembler &as, vreg5 vd, vreg5 vs2, freg5 frs1);
}

#endif
